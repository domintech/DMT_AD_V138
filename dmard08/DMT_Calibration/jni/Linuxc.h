/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class tw_com_domintech_gsensor_Linuxc */
#ifndef _Included_tw_com_dmt_gsensor_Linuxc
#define _Included_tw_com_dmt_gsensor_Linuxc
#define SENSOR_DATA_SIZE 3

#define IOCTL_MAGIC  0x09                         

#define SENSOR_RESET    		_IO(IOCTL_MAGIC, 0)
#define SENSOR_CALIBRATION   	_IOWR(IOCTL_MAGIC,  1, int[SENSOR_DATA_SIZE])
#define SENSOR_GET_OFFSET  		_IOR(IOCTL_MAGIC,  2, int[SENSOR_DATA_SIZE])
#define SENSOR_SET_OFFSET  		_IOWR(IOCTL_MAGIC,  3, int[SENSOR_DATA_SIZE])
#define SENSOR_READ_ACCEL_XYZ  	_IOR(IOCTL_MAGIC,  4, int[SENSOR_DATA_SIZE])
#define SENSOR_SETYPR  			_IOW(IOCTL_MAGIC,  5, int[SENSOR_DATA_SIZE])
#define SENSOR_GET_OPEN_STATUS	_IO(IOCTL_MAGIC,  6)
#define SENSOR_GET_CLOSE_STATUS	_IO(IOCTL_MAGIC,  7)
#define SENSOR_GET_DELAY		_IOR(IOCTL_MAGIC,  8, unsigned int*)

#define SENSOR_MAXNR 8
/*
#define SENSOR_DMARD_IOCTL_BASE 		234

#define IOCTL_SENSOR_SET_DELAY_ACCEL   	_IO(SENSOR_DMARD_IOCTL_BASE, 100)
#define IOCTL_SENSOR_GET_DELAY_ACCEL   	_IO(SENSOR_DMARD_IOCTL_BASE, 101)
#define IOCTL_SENSOR_GET_STATE_ACCEL   	_IO(SENSOR_DMARD_IOCTL_BASE, 102)
#define IOCTL_SENSOR_SET_STATE_ACCEL		_IO(SENSOR_DMARD_IOCTL_BASE, 103)
#define IOCTL_SENSOR_GET_DATA_ACCEL		_IO(SENSOR_DMARD_IOCTL_BASE, 104)

#define IOCTL_MSENSOR_SET_DELAY_MAGNE   	_IO(SENSOR_DMARD_IOCTL_BASE, 200)
#define IOCTL_MSENSOR_GET_DATA_MAGNE		_IO(SENSOR_DMARD_IOCTL_BASE, 201)
#define IOCTL_MSENSOR_GET_STATE_MAGNE   	_IO(SENSOR_DMARD_IOCTL_BASE, 202)
#define IOCTL_MSENSOR_SET_STATE_MAGNE	_IO(SENSOR_DMARD_IOCTL_BASE, 203)

#define IOCTL_SENSOR_GET_NAME   _IO(SENSOR_DMARD_IOCTL_BASE, 301)
#define IOCTL_SENSOR_GET_VENDOR   _IO(SENSOR_DMARD_IOCTL_BASE, 302)

#define IOCTL_SENSOR_GET_CONVERT_PARA   _IO(SENSOR_DMARD_IOCTL_BASE, 401)

#define SENSOR_CALIBRATION   	_IOWR(SENSOR_DMARD_IOCTL_BASE,  402, int[SENSOR_DATA_SIZE])
*/
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     tw_com_dmt_gsensor_Linuxc
 * Method:    open
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_tw_com_dmt_gsensor_Linuxc_open
  (JNIEnv *, jclass);

/*
 * Class:     tw_com_dmt_gsensor_Linuxc
 * Method:    close
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_tw_com_dmt_gsensor_Linuxc_close
  (JNIEnv *, jclass);

/*
 * Class:     tw_com_dmt_gsensor_Linuxc
 * Method:    reset
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_tw_com_dmt_gsensor_Linuxc_reset
  (JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_tw_com_dmt_gsensor_Linuxc_cab
  (JNIEnv *, jclass, jintArray);
JNIEXPORT jint JNICALL Java_tw_com_dmt_gsensor_Linuxc_getoffset
  (JNIEnv *, jclass, jintArray);
JNIEXPORT jint JNICALL Java_tw_com_dmt_gsensor_Linuxc_setoffset
  (JNIEnv *, jclass, jintArray);
JNIEXPORT jint JNICALL Java_tw_com_dmt_gsensor_Linuxc_readxyz
  (JNIEnv *, jclass, jintArray);
  
#ifdef __cplusplus
}
#endif
#endif
